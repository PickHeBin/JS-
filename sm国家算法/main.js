/*
头部
x-tif-signature
X-Tingyun

表单加密
signData
encData

响应加密
encData
signData
 */
const CryptoJs = require('crypto-js')
let xl = require('./webout');
//扣算法
window = global


r = xl('68b2')
o = r.sm2
s = r.sm4

function header_js() {
    r = CryptoJs.SHA256
    s = Math.ceil((new Date).getTime() / 1e3)
    h = i()
    f = s + h + s
    nonce = h
    signature = r(f).toString()
    timestamp_ = s
    nonce = h
    Zi = (
        function () {
            function t(t) {
                return 0 > t ? NaN : 30 >= t ? 0 | Math.random() * (1 << t) : 53 >= t ? (0 | Math.random() * (1 << 30)) + (0 | Math.random() * (1 << t - 30)) * (1 << 30) : NaN
            }

            function e(t, e) {
                for (var n = t.toString(16), r = e - n.length, a = "0"; r > 0; r >>>= 1,
                    a += a)
                    1 & r && (n = a + n);
                return n
            }

            return function (n) {
                return n || (n = ""),
                e(t(32), 8) + n + e(t(16), 4) + n + e(16384 | t(12), 4) + n + e(32768 | t(14), 4) + n + e(t(48), 12)
            }
        }());

    function Ir() {
        try {
            return Zi().substring(0, 16)
        } catch (t) {
        }
    }

    Tingyun = "c=B|" + "4Nl_NnGbjwY" + ";x=" + Ir()
    return [signature, nonce, timestamp_, Tingyun]
}

function y(e, t) {

    return A(b(A(e.substr(0, 16)), A(t)).toUpperCase().substr(0, 16))
}

function p(e) {
    var t = new Array
        , n = 0;
    for (var i in e)
        t[n] = i,
            n++;
    var r = [].concat(t).sort()
        , o = {};
    for (var a in r)
        o[r[a]] = e[r[a]];
    return o
}

function v(e) {
    var t = [];
    for (var n in e)
        if (e.hasOwnProperty(n) && (e[n] || "".concat(e[n])))
            if ("data" === n) {
                var i = Object.assign({}, e[n]);
                for (var r in i) {
                    if ("number" != typeof i[r] && "boolean" != typeof i[r] || (i[r] = "" + i[r]),
                    Array.isArray(i[r]) && !i[r].length && delete i[r],
                    Array.isArray(i[r]) && i[r].length > 0)
                        for (var o = 0; o < i[r].length; o++)
                            i[r][o] = p(i[r][o]);
                    null != i[r] && i[r] || delete i[r]
                }
                var a = p(i);
                t.push("".concat(n, "=").concat(JSON.stringify(a)))
            } else
                t.push("".concat(n, "=").concat(e[n]));
    c = data['appSecret']
    return t.push("key=".concat(c)),
        t.join("&")
}

function A(e) {
    var t, n, i = new Array;
    t = e.length;
    for (var r = 0; r < t; r++)
        (n = e.charCodeAt(r)) >= 65536 && n <= 1114111 ? (i.push(n >> 18 & 7 | 240),
            i.push(n >> 12 & 63 | 128),
            i.push(n >> 6 & 63 | 128),
            i.push(63 & n | 128)) : n >= 2048 && n <= 65535 ? (i.push(n >> 12 & 15 | 224),
            i.push(n >> 6 & 63 | 128),
            i.push(63 & n | 128)) : n >= 128 && n <= 2047 ? (i.push(n >> 6 & 31 | 192),
            i.push(63 & n | 128)) : i.push(255 & n);
    return i
}

function b(t, n) {
    var i = 16 - parseInt(n.length % 16);
    n = n.concat(new Array(i).fill(i));

    var r = s.encrypt(n, t);
    return new Buffer.from(r).toString("hex")
}


function data_js(_data) {
    data = {
        appCode: "T98HPCGN5ZVVQBS8LZQNOAEXVI9GYHKQ",
        version: "1.0.0",
        appSecret: "NMVFVILMKT13GEMD3BKPKCTBOQBPZR2P",
        publicKey: "BEKaw3Qtc31LG/hTPHFPlriKuAn/nzTWl8LiRxLw4iQiSUIyuglptFxNkdCiNXcXvkqTH79Rh/A2sEFU6hjeK3k=",
        privateKey: "AJxKNdmspMaPGj+onJNoQ0cgWk2E3CYFWKBJhpcJrAtC",
        publicKeyType: "base64",
        privateKeyType: "base64"
    }
    t = {}
    t.data = _data

    function m(e) {
        var t = {}
            , n = ["signData", "encData", "extra"];
        for (var i in e)
            e.hasOwnProperty(i) && !n.includes(i) && null != e[i] && (t[i] = e[i]);
        return t
    }


    signData = function (t) {

        var n = m(t.data)
            , i = p(n);
        i.data = p(i.data);
        d = '009c4a35d9aca4c68f1a3fa89c93684347205a4d84dc260558a049869709ac0b42'
        var r = v(i)
            , a = o.doSignature(r, d, {
            hash: !0
        });
        return new Buffer.from(a, "hex").toString("base64")
    }(t)
    console.log(signData)


    encData = function (e, t) {
        switch (e.toUpperCase()) {
            case "SM2":
                return function (e) {
                    try {
                        var t = o.generateKeyPairHex()
                            , n = t.publicKey
                            , i = e;
                        o.doEncrypt(i, n, 1)
                    } catch (e) {
                    }
                }(t);
            case "SM3":
                return function (e) {
                    try {
                        var t = a(e);
                        return t
                    } catch (e) {
                    }
                }(t);
            case "SM4":
                return function (e) {
                    try {
                        var t = e.data.data && JSON.stringify(e.data.data)
                            , n = A(t);
                        u = data['appCode']
                        e.data.appCode && e.data.appCode !== u && (u = e.data.appCode);

                        var i = y(u, c)
                            , r = b(i, n);
                        return r.toUpperCase()
                    } catch (e) {
                        console.log(e);
                    }
                }(t)
        }
    }("SM4", t)
    return [signData, encData]
}

//响应 encData
function response_js(response) {
    encData = function g(t, n) {
        switch (t.toUpperCase()) {
            case "SM4":
                return function (t) {
                    if (!t)
                        return null;
                    var n = new Buffer.from(t.data.data.encData, "hex")
                        , i = function (t, n) {
                        var i = s.decrypt(n, t)
                            , r = i[i.length - 1];
                        return i = i.slice(0, i.length - r),
                            new Buffer.from(i).toString("utf-8")
                    }(y('T98HPCGN5ZVVQBS8LZQNOAEXVI9GYHKQ', 'NMVFVILMKT13GEMD3BKPKCTBOQBPZR2P'), n);
                    return JSON.parse(i)
                }(n);
            case "SM2":
                return function (e) {
                    try {
                        var t = o.generateKeyPairHex()
                            , n = t.privateKey;
                        o.doDecrypt(encryptData, n, 1)
                    } catch (e) {
                    }
                }()
        }
    }("SM4", response)
    return encData
}

// response_js()
//响应 signData
response = {
    'code': 0, 'data': {
        'signData': 'WDa5QssmxZx+erRYYCDP8BM1q4wCxtmKsNQhpmkC/emDR+ocW0qOeIpViiIAI8/UPxyFo2pNS8Yffh/AlSDUyw==',
        'encType': 'SM4',
        'data': {'encData},
        'signType': 'SM2',
        'appCode': 'T98HPCGN5ZVVQBS8LZQNOAEXVI9GYHKQ',
        'version': '1.0.0',
        'timestamp': '1683817236019'
    }, 'message': '成功', 'timestamp': '1683817236', 'type': 'success'
}

console.log(response_js(response))

// console.log(header_js())